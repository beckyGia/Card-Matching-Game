/* you must first define a name for the font, and then point to the font file. */
@font-face {
  font-family: "Creepy";
  src: url(/Assets/Fonts/Creepy.woff) format("woff"),
    url(/Assets/Fonts/Creepy.woff2) format("woff2");
}

@font-face {
  font-family: "Lunacy";
  src: url(/Assets/Fonts/Lunacy.woff) format("woff"),
    url(/Assets/Fonts/Lunacy.woff2) format("woff2");
}

* {
  box-sizing: border-box;
}

html {
  min-height: 100vh;
  cursor: url("Assets/Cursors/Ghost.cur"), auto;
}

body {
  margin: 0;
  /* radial-gradient() CSS function creates an image consisting of a progressive transition between two or more colors that radiate from an origin. Its shape may be a circle or an ellipse.  - first color is the center colour and second color is the outer color*/
  background: radial-gradient(#9d5900, #3d2200);
}

.page-title {
  color: #ff6d00;
  font-family: Creepy, serif;
  font-weight: normal;
  text-align: center;
  font-size: 6em;
}

.game-info-container {
  /* grid-column is shorthand for 'grid-column-start' and 'grid-column-end'.*/
  grid-column: 1 / -1;
  display: flex;
  justify-content: space-between;
}

.game-info {
  font-family: Lunacy, serif;
  color: #ffbb89;
  font-size: 4em;
}

.game-container {
  display: grid;
  grid-template-columns: repeat(4, auto);
  grid-gap: 10px;
  margin: 50px;
  justify-content: center;
  /*tells us that our user is 500 px away from the flip when we rotate things in three dimensions*/
  perspective: 500px;
}

.card {
  position: relative;
  height: 175px;
  width: 125px;
}

.card:hover {
  cursor: url("Assets/Cursors/GhostHover.cur"), auto;
}

.card-face {
  /* helps to overlap the spider-webs on the front and back of the card*/
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  /* Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer. so anything that is not facing us should act like its not there */
  backface-visibility: hidden;
  border-radius: 12px;
  border-width: 1px;
  border-style: solid;
  transition: transform 500ms ease-in-out;
}

.card.visible .card-back {
  /* so our card back is no longer being shown*/
  transform: rotateY(-180deg);
}

.card.visible .card-front {
  transform: rotateY(0);
}

.card.matched .card-value {
  animation: dance 1s linear infinite 500ms;
}

.overlay-text {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  justify-content: center;
  align-items: center;
  z-index: 100;
  color: #ff6d00;
  font-family: Creepy, serif;
}

.overlay-text-small {
  font-size: 0.3em;
}

.overlay-text.visible {
  display: flex;
  flex-direction: column;
  /* The element will retain the style values that is set by the last keyframe (depends on animation-direction and animation-iteration-count) */
  animation: overlay-grow 500ms forwards;
}

@keyframes overlay-grow {
  from {
    background-color: rgba(0, 0, 0, 0);
    font-size: 0;
  }
  to {
    background-color: rgba(0, 0, 0, 0.8);
    font-size: 10em;
  }
}

@keyframes dance {
  0%,
  100% {
    transform: rotate(0);
  }
  25% {
    transform: rotate(-30deg);
  }
  75% {
    transform: rotate(30deg);
  }
}

.card-back {
  background-color: black;
  border-color: #ff6d00;
}

/* our card-face will be completely upside down for the front of our card */
.card-front {
  background-color: #ffbb89;
  border-color: #333;
  transform: rotateY(180deg);
}

.card-value {
  transition: transform 100ms ease-in-out;
  transform: scale(0.9);
}

.card-front:hover .card-value {
  transform: scale(1);
}

.cob-web {
  position: absolute;
  width: 47px;
  height: 47px;
  transition: width 100ms ease-in-out, height 100ms ease-in-out;
}

.card-face:hover .cob-web {
  width: 52px;
  height: 52px;
}

.cob-web-top-left {
  transform: rotate(270deg);
  top: 0;
  left: 0;
}

.cob-web-top-right {
  top: 0;
  right: 0;
}

.cob-web-bottom-left {
  transform: rotate(180deg);
  bottom: 0;
  left: 0;
}

.cob-web-bottom-right {
  transform: rotate(90deg);
  bottom: 0;
  right: 0;
}

.spider {
  align-self: flex-start;
  transform: translateY(-10px);
  transition: transform 100ms ease-in-out;
}

.card-back:hover .spider {
  transform: translateY(0);
}

@media (max-width: 600px) {
  .game-container {
    grid-template-columns: repeat(2, auto);
  }
  .game-info-container {
    flex-direction: column;
    align-items: center;
  }
}
